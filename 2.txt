 import numpy as np
 import pandas as pd
 from sklearn.model_selection import train_test_split
 import matplotlib.pyplot as plt
 import seaborn as sns
 from sklearn.preprocessing import LabelEncoder
 from sklearn.metrics import accuracy_score,confusion_matrix
 from sklearn.linear_model import LogisticRegression
 import seaborn as sns
 import matplotlib.pyplot as plt

df = pd.read_csv("heart.csv")
 df.head()

*Data Cleaning
df = df.drop_duplicates()

f.describe()
df.info()

df.isna().sum()

*Data Integration
 df.head()
 subSet1 = df[['age','cp','chol','thalachh']]
 subSet2 = df[['exng','slp','output']]

 merged_df = subSet1.merge(right=subSet2,how='cross')
 merged_df.head()

*Error Correcting
df.columns

 def remove_outliers(column):
    Q1 = column.quantile(0.25)
    Q3 = column.quantile(0.75)
    IQR = Q3 - Q1
    threshold = 1.5 * IQR
    outlier_mask = (column < Q1 - threshold) | (column > Q3 + threshold)
    return column[~outlier_mask]

 col_name = ['cp','thalachh','exng','oldpeak','slp','caa']
 for col in col_name:
    df[col] = remove_outliers(df[col])

*Error correction
 df = df.dropna()
 df.isna().sum()

df = df.drop('fbs',axis=1)

 correlations = df.corr()['output'].drop('output')
 # Print correlations
 print("Correlation with the Target:")
 print(correlations)
 print()

*Data Split
 x = df[['cp','thalachh','exng','oldpeak','slp','caa']]
 y = df.output
 x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)
 x_train.shape,x_test.shape,y_train.shape,y_test.shape


*Data transformation
 from sklearn.preprocessing import LabelEncoder
 col_label= ['chol','type']
 # Initialize LabelEncoder
 encoder = LabelEncoder()
 # Iterate over columns
 for col in df.columns:
        # Fit and transform the column
        df[col] = encoder.fit_transform(df[col])

 df

*Data model building
#Data model building
import seaborn as sns
import matplotlib.pyplot as plt
plt.figure(figsize=(6, 6)) 

for col in col_name:
    sns.boxplot(data=a[col])
    plt.title(col)
    plt.show()

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
a['Month'] = le.fit_transform(a['Month'])
a['Day'] = le.fit_transform(a['Day'])
a.head()


//option

 y_train= np.array(y_train).reshape(-1, 1)
 y_test= np.array(y_test).reshape(-1, 1)

y_train.shape

 model = LogisticRegression()
 model.fit(x_train_scaled, y_train)
 # Make predictions on the test set
 y_pred = model.predict(x_test_scaled)
 # Evaluate the model's accuracy
 accuracy = accuracy_score(y_test, y_pred)
 print("Accuracy:", accuracy)

